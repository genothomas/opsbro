language: python

# NOTE: 2.6 will be add to the build matrix explictly only for the interesting cases
python:
  - "2.7"


# We need docker for our scripts that test various installations
services:
  - docker


env:
##### First basic tests
- TEST_SUITE=API
- TEST_SUITE=PYTHON
- TEST_SUITE=OTHER
##### Then features
- TEST_SUITE=FEATURE
- TEST_SUITE=MONITORING
##### Compliance rules
- TEST_SUITE=COMPLIANCE-FILE-RIGHTS
- TEST_SUITE=COMPLIANCE-GET-URL
- TEST_SUITE=COMPLIANCE-PACKAGE-INSTALL
- TEST_SUITE=COMPLIANCE-REPOSITORY
- TEST_SUITE=COMPLIANCE-SYSTEM-USER
- TEST_SUITE=MODULE
- TEST_SUITE=PACK
##### Then complexe scenarios
# Some tests are with 2 docker that must run together. I hope it will be maintainable
- TEST_SUITE=COMPOSE-GOSSIP-UDP-DETECT
# This one is with 4 containers, in 2 zones, one is sub level of another
- TEST_SUITE=COMPOSE-GOSSIP-ZONES
# This one is with 4 containers, in 3 zones, one is sub level of another
- TEST_SUITE=COMPOSE-GOSSIP-ZONES-MULTI
# This one is with 2 containers, a node with events, joining another, and sync its events
- TEST_SUITE=COMPOSE-GOSSIP-JOIN-SYNC-EVENTS
# This is a full DEMO with 4 containers, for a distributed HTTP with
# 2 real servers
# 1 haproxy (generators to the 2 http)
# 1 customer, with DNS module
- TEST_SUITE=COMPOSE-DEMO-HTTP
# This one is with 3 containers, trying to join together
- TEST_SUITE=COMPOSE-GOSSIP-JOIN
# This one block communication between 1 & 3, and 2 will be the ping relay between both
- TEST_SUITE=COMPOSE-GOSSIP-INDIRECT-PING
##### Then installation on various distros
- TEST_SUITE=ALPINE
- TEST_SUITE=AMAZONLINUX
- TEST_SUITE=CENTOS-6
- TEST_SUITE=CENTOS-7
- TEST_SUITE=DEBIAN
- TEST_SUITE=FEDORA
- TEST_SUITE=OPENSUSE
- TEST_SUITE=UBUNTU


# becool with travis load : we do not want that all test that don't care about python
# run twice, even for just spawn a VM, si manage the python 2.6 / PYTHON case explicitly
matrix:
  include:
    - python: "2.6"
      env:     TEST_SUITE=PYTHON


# command to run tests
script:
  - chmod a+x test/*
  - chmod a+x test/docker-helper/*
  - cd test
  - ./test_suite.sh


# specific call to launch coverage data into coveralls.io
#after_success:
#  coveralls